name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Updated to the latest Node.js version

      - name: Install dependencies
        run: npm install
      
      - name: Build the application
        run: npm run build

      - name: Archive production artifact
        uses: actions/upload-artifact@v3
        with:
          name: production-artifact
          path: build/

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Updated to the latest Node.js version

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Code quality checks
        run: npm run lint

      - name: Code coverage
        run: npm run coverage

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: production-artifact
      
      - name: Deploy to Staging Environment 
        env:
          DEPLOYMENT_SERVER: ${{ secrets.DEPLOYMENT_SERVER }}
          DEPLOYMENT_KEY: ${{ secrets.DEPLOYMENT_KEY }}
        run: |
          echo "Deploying to Staging..."
          
          # Use SSH to deploy the artifact to the server
          scp -i $DEPLOYMENT_KEY -r build/* user@$DEPLOYMENT_SERVER:/path/to/deployment/directory
          
          # Optionally restart your application (if applicable)
          ssh -i $DEPLOYMENT_KEY user@$DEPLOYMENT_SERVER 'pm2 restart my-app'  # Example using PM2
