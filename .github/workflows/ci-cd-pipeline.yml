name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '7.0.x'

      - name: Restore dependencies
        run: dotnet restore "CarDealership.sln"  # No "Car Dealership" in the path

      - name: Build the project
        run: dotnet build "CarDealership.sln" --configuration Release --no-restore  # No "Car Dealership" in the path

      - name: Publish the project
        run: dotnet publish "CarDealership.sln" --configuration Release --output ./artifacts  # No "Car Dealership" in the path

      - name: Archive production artifact
        run: tar -czf artifacts.tar.gz -C ./artifacts .  # Create a tarball of the published output

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: artifacts.tar.gz

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '7.0.x'

      - name: Restore dependencies
        run: dotnet restore "CarDealership.sln"  # No "Car Dealership" in the path

      - name: Run unit tests
        run: dotnet test "CarDealership.sln" --configuration Release  # No "Car Dealership" in the path

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'  # Deploy only from the main branch

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact

      - name: Deploy to Staging
        run: |
          echo "Deploying to staging environment"
          # Insert your deployment commands here

      - name: Notify Deployment
        run: echo "Deployment to staging successful!"
